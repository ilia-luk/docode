version: "2"
services:


  nginx:
    restart: always
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./.docker/nginx_machine/certs:/etc/nginx/certs:ro"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    networks:
      - hive


  nginx-gen:
    restart: always
    container_name: nginx-gen
    image: jwilder/docker-gen
    volumes_from:
      - nginx
    volumes:
      - "./.docker/nginx_machine/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    depends_on:
      - nginx


  nginx-letsencrypt:
    restart: always
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "./.docker/nginx_machine/certs:/etc/nginx/certs:rw"
      - "./.docker/nginx_machine/vhost.d:/etc/nginx/vhost.d:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - nginx
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    depends_on:
      - nginx
      - nginx-gen

  web:
    restart: always
    container_name: web
    image: web-image
    command: npm build
    build:
      context: .
      dockerfile: .docker/node.dev.dockerfile
      args:
        - name=web
    env_file:
      - ./.docker/node_machine/node.dev.env
    environment:
      - VIRTUAL_HOST=domusnetwork.io
      - VIRTUAL_NETWORK=domusnetwork
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=domusnetwork.io
      - LETSENCRYPT_EMAIL=admin@domusnetwork.io
      - NODE_ENV=production
    networks:
      - hive
    ports:
      - "80:8080"
    volumes:
      - ./services/web:/root/service
      - /root/service/node_modules
    working_dir: /root/service
    depends_on:      
      - api


  app:
    restart: always
    container_name: app
    image: app-image
    command: npm build
    build:
      context: .
      dockerfile: .docker/node.dev.dockerfile
      args:
        - name=app
    env_file:
      - ./.docker/node_machine/node.dev.env
    environment:
      - VIRTUAL_HOST=app.domusnetwork.io
      - VIRTUAL_NETWORK=domusnetwork
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=app.domusnetwork.io
      - LETSENCRYPT_EMAIL=admin@domusnetwork.io
      - NODE_ENV=production
    networks:
      - hive
    ports:
      - "3000:3000"
    volumes:
      - ./services/web:/root/service
      - /root/service/node_modules
    working_dir: /root/service
    depends_on:      
      - api


  cms:
    restart: always
    container_name: cms
    image: cms-image
    command: npm build
    build:
      context: .
      dockerfile: .docker/node.dev.dockerfile
      args:
        - name=cms
    env_file:
      - ./.docker/node_machine/node.dev.env
    environment:
      - VIRTUAL_HOST=cms.domusnetwork.io
      - VIRTUAL_NETWORK=domusnetwork
      - VIRTUAL_PORT=7000
      - LETSENCRYPT_HOST=cms.domusnetwork.io
      - LETSENCRYPT_EMAIL=admin@domusnetwork.io
      - NODE_ENV=production
    networks:
      - hive
    ports:
      - "7000:7000"
    volumes:
      - ./services/cms:/root/service
      - /root/service/node_modules
    working_dir: /root/service
    depends_on:
      - api


  api:
    restart: always
    container_name: api
    image: api-image
    command: npm build
    build:
      context: .
      dockerfile: .docker/node.dev.dockerfile
      args:
        - name=api
    env_file:
      - ./.docker/node_machine/node.dev.env
    environment:
      - VIRTUAL_HOST=api.domusnetwork.io
      - VIRTUAL_NETWORK=domusnetwork
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=api.domusnetwork.io
      - LETSENCRYPT_EMAIL=admin@domusnetwork.io
      - NODE_ENV=production
    networks:
      - hive
    ports:
      - "8000:8000"
    volumes:
      - ./services/api:/root/service
      - /root/service/node_modules
    working_dir: /root/service
    depends_on:
      - nginx
      - nginx-gen
      - nginx-letsencrypt



networks:
  hive:
    external:
      name: domusnetwork